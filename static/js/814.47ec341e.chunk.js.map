{"version":3,"file":"static/js/814.47ec341e.chunk.js","mappings":"gLAkBA,UAfe,WACb,OACE,SAAC,KAAD,CACEA,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,GAGd,C,mHCbYC,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,4JAWVE,EAAaF,EAAAA,GAAAA,GAAH,gD,gGCSvB,EAlBqB,SAAC,GAAyB,IAAvBG,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAC3BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,IAAD,WACE,SAAC,IAAD,CAAYC,GAAE,kBAAaL,GAAMM,MAAO,CAAEC,KAAMJ,GAAhD,SACGF,GAASC,KAFGF,EAMpB,E,UCMD,EAhBkB,SAAC,GAAc,IAAZQ,EAAW,EAAXA,KACnB,OACE,SAAC,KAAD,WACE,SAAC,KAAD,UACGA,EAAKC,KAAI,gBAAGT,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACR,SAACQ,EAAD,CAAoBV,GAAIA,EAAIC,MAAOA,EAAOC,KAAMA,GAAhCF,EADR,OAMjB,C,qICbYW,EAAgBd,EAAAA,GAAAA,QAAH,yHAObe,EAAcf,EAAAA,GAAAA,GAAH,wFAMXgB,EAAahB,EAAAA,GAAAA,GAAH,4C,sGCfjBiB,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAe,+N,sCC4BnB,EAxBiB,WACf,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,WAAS,GAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAWA,OATAC,EAAAA,EAAAA,YAAU,WACRD,GAAY,GDLLE,MAAM,+DAAgEb,GACxEc,MAAK,SAAAC,GACF,IAAKA,EAASC,GAChB,MAAM,IAAIC,MAAMF,EAASG,QAGvB,OAAOH,EAASI,MACzB,ICCIL,MAAK,gBAAGM,EAAH,EAAGA,QAAH,OAAiBb,EAASa,EAA1B,IACLC,OAAM,SAAAb,GAAK,OAAIC,EAASD,EAAMc,QAAnB,IACXC,QAAQZ,GAAY,GACxB,GAAE,KAGD,gCACGH,GAASgB,EAAAA,OAAAA,QAAe,gDACxBd,IAAY,SAACe,EAAA,QAAD,KACb,SAAC,KAAD,UAAa,oBACb,SAACC,EAAA,EAAD,CAAWhC,KAAMY,MAGtB,C","sources":["components/Loader/Loader.jsx","components/TrendingList/MovieItem/MovieItem.styled.js","components/TrendingList/MovieItem/MovieItem.jsx","components/TrendingList/MovieList.jsx","components/TrendingList/MovieList.styled.js","Api/get-trending-api.js","pages/HomePage.jsx"],"sourcesContent":["import React from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <ThreeDots\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"#d12b19\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{}}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n};\n\nexport default Loader;\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const StyledLink = styled(Link)`\n    font-size: 16px;\n    text-decoration: none;\n    color: black;\n\n    &:hover,\n    &:focus {\n        color: #d12b19;\n    }\n`;\n\nexport const StyledItem = styled.li`\n    margin-bottom: 3px;\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledLink, StyledItem } from './MovieItem.styled';\nimport { useLocation } from 'react-router-dom';\n\nconst TrendingItem = ({ id, title, name }) => {\n  const location = useLocation();\n\n  return (\n    <StyledItem key={id}>\n      <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n        {title || name}\n      </StyledLink>\n    </StyledItem>\n  );\n};\n\nTrendingItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string,\n  name: PropTypes.string,\n};\n\nexport default TrendingItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MovieItem from './MovieItem/MovieItem';\nimport { StyledSection, StyledList } from './MovieList.styled';\n\nconst MovieList = ({ data }) => {\n  return (\n    <StyledSection>\n      <StyledList>\n        {data.map(({ id, title, name }) => (\n          <MovieItem key={id} id={id} title={title} name={name} />\n        ))}\n      </StyledList>\n    </StyledSection>\n  );\n};\n\nMovieList.propTypes = {\n  data: PropTypes.array.isRequired,\n};\n\nexport default MovieList;\n","import styled from \"styled-components\";\n\nexport const StyledSection = styled.section`\n    min-width: 320px;\n    padding-left: 20px;\n    padding-right: 20px;\n    margin-top: 10px;\n`;\n\nexport const StyledTitle = styled.h2`\n    margin: 0;\n    margin-top: 10px;\n    padding-left: 20px;\n`;\n\nexport const StyledList = styled.ul`\n    margin: 10px 0;\n`;","const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxNTE3NmZjNDE2MzI4ZTk1ZGY5ZWFlMWE5MmExOTZkYSIsInN1YiI6IjY0NzQ5YmNmZGQ3MzFiMmQ3OGJhM2VhZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.yI8oxgZajMgWItmBQF3P_YhUKz9fcoHMEmZxHaInDx0'\n  }\n};;\n\nexport const fetchTrending = () => {\n    return fetch('https://api.themoviedb.org/3/trending/all/day?language=en-US', options)\n        .then(response => {\n            if (!response.ok) {\n          throw new Error(response.status)\n            }\n            \n            return response.json();\n  })\n}","import React from 'react';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { useState, useEffect } from 'react';\nimport { fetchTrending } from 'Api/get-trending-api';\nimport MovieList from 'components/TrendingList/MovieList';\nimport Loader from 'components/Loader/Loader';\nimport { StyledTitle } from 'components/TrendingList/MovieList.styled';\n\nconst HomePage = () => {\n  const [movie, setMovie] = useState([]);\n  const [error, setError] = useState('');\n  const [isLoader, setIsLoader] = useState(false);\n\n  useEffect(() => {\n    setIsLoader(true);\n\n    fetchTrending()\n      .then(({ results }) => setMovie(results))\n      .catch(error => setError(error.message))\n      .finally(setIsLoader(false));\n  }, []);\n\n  return (\n    <>\n      {error && Notify.failure('Something went wrong, please try again later')}\n      {isLoader && <Loader />}\n      <StyledTitle>Trending today</StyledTitle>\n      <MovieList data={movie} />\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","StyledLink","styled","Link","StyledItem","id","title","name","location","useLocation","to","state","from","data","map","MovieItem","StyledSection","StyledTitle","StyledList","options","method","headers","accept","Authorization","useState","movie","setMovie","error","setError","isLoader","setIsLoader","useEffect","fetch","then","response","ok","Error","status","json","results","catch","message","finally","Notify","Loader","MovieList"],"sourceRoot":""}